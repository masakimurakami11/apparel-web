= render partial: 'layouts/header-black'

.product-detail
  .cover-1
  .cover-2
  .product-detail__image-space
    .product-detail__image-first-space
      .product-detail__image-first
        = image_tag("/#{@product.images[0].image}", class: 'product-image-1 show')
        - @images[1..3].each do |image|
          = image_tag("/#{image.image}", class: 'product-image-1')
    .product-detail__image-other
      = image_tag("/#{@product.images[0].image}", class: 'product-image-2 active')
      - @images[1..3].each do |image|
        = image_tag("/#{image.image}", class: 'product-image-2')
  .product-detail__select
    .product-detail__select-name
      = @product.name
    .product-detail__select-description
      = @product.description
    .product-detail__select-price
      = " Â¥ #{@product.price.to_s(:delimited)} (+tax)"
    = form_with model: @order,url: create_order_products_path, local: true do |f|
      .count
        %p.count-name COUNT
        = f.select :count, [["--", 0],["1", 1],["2", 2],["3",3],["4",4],["5",5],["6",6],["7",7],["8",8],["9",9]], {}, class: 'count-space'
      .size
        %p.size-name SIZE
        = f.select :size, Order.sizes.keys.map {|k| [I18n.t("enums.order.size.#{k}"), k]}, {}, class: 'size-space'
      .color
        %p.color-name COLOR
        = f.select :color, Order.colors.keys.map {|k| [I18n.t("enums.order.color.#{k}"), k]}, {}, class: 'color-space'
      = f.hidden_field :product_id, value: @product.id
      .cart-btn-space
        = f.submit 'Add to cart', class: 'cart-btn'


-# = javascript_include_tag 'product-show.js'